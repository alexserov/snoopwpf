<Window x:Class="Snoop.JlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:snoop="clr-namespace:Snoop"
        mc:Ignorable="d" SizeToContent="WidthAndHeight"
        UseLayoutRounding="True"
        Title="JlWindow" WindowStyle="None" Topmost="True" AllowsTransparency="True" Background="Transparent" ShowInTaskbar="False">
    <Window.Resources>
        <Color x:Key="OuterBorder">#1471AD</Color>
        <Color x:Key="HoverForeground">#3C95D8</Color>
        <Color x:Key="Foreground">#47AFFF</Color>
        <Color x:Key="LightFill">#1D547F</Color>
        <Color x:Key="DarkFill">#03233F</Color>
        
        <Style x:Key="baseStyle" TargetType="Control">
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=snoop:JlWindow}, Path=Foreground}"></Setter>
            <Setter Property="Width" Value="{snoop:ScaledWidth 28}"/>
            <Setter Property="Height" Value="{snoop:ScaledWidth 28}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource HoverForeground}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
            
        </Style>
        <Style x:Key="baseButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource baseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Border Background="Transparent">
                            <Viewbox>
                                <ContentPresenter Width="28" Height="28"/>                                
                            </Viewbox>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource baseButtonStyle}">
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource baseButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource HoverForeground}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>              
        <Style TargetType="Thumb" BasedOn="{StaticResource baseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border Background="Transparent">
                            <Viewbox>
                            <Grid Width="28" Height="28">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="3" Grid.Column="1" Grid.ColumnSpan="3"></Border>
                                <Border Background="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Grid.Row="3" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="3" Grid.Column="1" Grid.ColumnSpan="3"></Border>
                            </Grid>
                                </Viewbox>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Foreground>
        <SolidColorBrush Color="{StaticResource Foreground}"/>
    </Window.Foreground>
    <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="2" BorderThickness="1">
        <Border.BorderBrush>
            <SolidColorBrush Color="{StaticResource OuterBorder}"/>
        </Border.BorderBrush>
        <Border VerticalAlignment="Center" x:Name="Root" HorizontalAlignment="Center"  BorderThickness="1"
                CornerRadius="1" Margin="0">
            <Border.BorderBrush>
                <SolidColorBrush Color="{StaticResource Foreground}"/>
            </Border.BorderBrush>
            <Border.Background>
            <LinearGradientBrush>
                <GradientStop Color="{StaticResource LightFill}" Offset="0"></GradientStop>
                <GradientStop Color="{StaticResource DarkFill}" Offset="1"></GradientStop>
            </LinearGradientBrush>
        </Border.Background>
        <StackPanel Orientation="Horizontal" x:Name="rootPanel">
            <Thumb DragDelta="OnDragDelta" DragStarted="OnDragStarted" DragCompleted="OnDragCompleted"/>
            <Border MinWidth="2" MinHeight="2" Background="{Binding ElementName=Root, Path=BorderBrush}" x:Name="splitter1" Visibility="{Binding ExtendedVisibility}"/>
            <Button x:Name="searchButton" Visibility="{Binding ExtendedVisibility}">
                <snoop:WindowFinder Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                             ToolTip="Drag and drop this crosshairs over a WPF window in order to Snoop it." />
            </Button>
            <Border MinWidth="2" MinHeight="2"  Background="{Binding ElementName=Root, Path=BorderBrush}" x:Name="splitter4" Visibility="{Binding ExtendedVisibility}"/>
            <Button x:Name="chooseButton" Visibility="{Binding ExtendedVisibility}" Click="ChooseClick">
                <Grid>
                    <Border Margin="3,3,10,14" BorderThickness="2" BorderBrush="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"/>
                    <Border Margin="10,14,3,3" BorderThickness="2" BorderBrush="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"/>
                </Grid>
            </Button>
            <Border MinWidth="2" MinHeight="2"  Background="{Binding ElementName=Root, Path=BorderBrush}" x:Name="splitter2" Visibility="{Binding ExtendedVisibility}"/>
            <Button x:Name="closeButton" Visibility="{Binding ExtendedVisibility}" Click="ExitButtonClick">
                <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" Stretch="Uniform" Margin="5"></Path>
            </Button>
            <Border MinWidth="2" MinHeight="2"  Background="{Binding ElementName=Root, Path=BorderBrush}" x:Name="splitter3" Visibility="{Binding ExtendedVisibility}"/>
            <ToggleButton x:Name="pinButton" Visibility="{Binding ExtendedVisibility}" IsChecked="{Binding IsPinned}">
                <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1M3,11L3,7 0,7 0,6 1,6 1,1 1,0 6,0 6,1 6,6 7,6 7,7 4,7 4,11 3,11z M2,1L2,6 4,6 4,1 2,1z" Stretch="Uniform" Margin="5"></Path>
            </ToggleButton>
        </StackPanel>
    </Border>
    </Border>
</Window>
