<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Snoop"
    xmlns:i="clr-namespace:Snoop.Infrastructure"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/interactivedesigner/2006"    
    xmlns:conv="clr-namespace:Snoop.Converters"
    xmlns:MethodsTabNS="clr-namespace:Snoop.MethodsTab"
    xmlns:DebugListenerNS="clr-namespace:Snoop.DebugListenerTab"
    xmlns:treeList="clr-namespace:Snoop.TreeList"
    xmlns:controls="clr-namespace:Snoop.Controls"
    x:Class="Snoop.SnoopUI"
    mc:Ignorable="d"
    Icon="Snoop.ico"
    Title="Snoop"
    Background="#FFE0DFE3"
    ShowInTaskbar="True"
    SnapsToDevicePixels="True"
    Focusable="False"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ProperTreeViewResources.xaml" />
                <ResourceDictionary Source="Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="refreshButton" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Stroke="#FF000000"
                                            StrokeThickness="1"
                                            Margin="3,3,3,3"
                                            SnapsToDevicePixels="True"
                                            StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF69E861" Offset="0" />
                            <GradientStop Color="#FFE3E5F0" Offset="0.5" />
                            <GradientStop Color="#FF1CC211" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#FF003C74" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid Width="Auto" Height="Auto">
                                <Border
                                    x:Name="border"
                                    BorderBrush="#FF696969"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="4,4,4,4" />
                                <ContentPresenter Margin="2,2,2,2" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                                <DataTrigger
                                    Binding="{Binding (ToggleButton.IsChecked), RelativeSource={RelativeSource Self}}"
                                    Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#FFA0A0A0"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                <GradientStop Color="#FFCEFFCF" Offset="0" />
                                                <GradientStop Color="#FFE1FFE3" Offset="0.43888888888888888" />
                                                <GradientStop Color="#FFC4FFC8" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <local:ObjectToStringConverter x:Key="niceNamer" />
            <conv:IsPowerShellInstalledToVisibilityConverter x:Key="isPowerShellInstalled" />

            <DataTemplate x:Key="stylelessTextBlockDataTemplate">
                <TextBlock Style="{x:Null}" Text="{Binding}" />
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="True">
                    <!-- Refresh Button -->
                    <Button
                        DockPanel.Dock="Right"
                        Style="{StaticResource refreshButton}"
                        Width="18"
                        Height="18"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Margin="0,2,2,2"
                        Command="{x:Static local:SnoopUI.RefreshCommand}">
                        <Button.ToolTip>
                            <TextBlock Style="{x:Null}" Text="Refresh the tree view" />
                        </Button.ToolTip>
                        <Image Source="{StaticResource reloadDrawingImage}" />
                    </Button>
                    <ToggleButton
                        DockPanel.Dock="Right"
                        Style="{StaticResource refreshButton}"
                        Width="18"
                        Height="18"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Margin="0,2,2,2"
                        IsChecked="{Binding EnableLiveTree, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type local:SnoopUI}, Mode=FindAncestor}}">
                        <ToggleButton.ToolTip>
                            <TextBlock Style="{x:Null}" Text="Track visual tree changes" />
                        </ToggleButton.ToolTip>
                        <Viewbox Width="16" Height="16" Stretch="Uniform" StretchDirection="Both"
                                 HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid Margin="-5,-5,5,5">
                                <Path
                                    Data="M25 36C13.5 36 8.3 25.9 8.1 25.4c-.1-.3-.1-.6 0-.9C8.3 24.1 13.5 14 25 14s16.7 10.1 16.9 10.6c.1.3.1.6 0 .9-.2.4-5.4 10.5-16.9 10.5zM10.1 25c1.1 1.9 5.9 9 14.9 9s13.7-7.1 14.9-9c-1.1-1.9-5.9-9-14.9-9s-13.7 7.1-14.9 9z"
                                    Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <Path
                                    Data="M25 34c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zm0-16c-3.9 0-7 3.1-7 7s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7z"
                                    Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <Path
                                    Data="M25 30c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3s3-1.3 3-3-1.3-3-3-3c-.6 0-1-.4-1-1s.4-1 1-1c2.8 0 5 2.2 5 5s-2.2 5-5 5z"
                                    Fill="Black" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            </Grid>
                        </Viewbox>
                    </ToggleButton>
                    <!-- Filter Combo Box -->
                    <Border DockPanel.Dock="Left" Margin="2,2,2,2" Padding="2,0" BorderThickness="1" BorderBrush="DarkGray" Background="White">
                        <DockPanel LastChildFill="True">
                            <DockPanel.Resources>
                                <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
                                    <Border Background="Transparent">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                                <Style x:Key="ButtonStyle" TargetType="Button">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Foreground" Value="#0B816C"/>
                                    <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
                                    <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:SnoopUI.SearchEngineInherited).IsFiltering}"/>
                                    <Setter Property="Opacity" Value="0.6"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.8"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Opacity" Value="1"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Resources>
                            <Button Click="ButtonBase_OnClick3" DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}" Foreground="#B0251A">
                                <Viewbox Width="16" Height="16" Stretch="Uniform">
                                    <Grid>
                                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" Data="M168.352,142.924l25.28-25.28c3.495-3.504,3.495-9.154,0-12.64l-12.64-12.649
		c-3.495-3.486-9.145-3.495-12.64,0l-25.289,25.289l-25.271-25.271c-3.504-3.504-9.163-3.504-12.658-0.018l-12.64,12.649
		c-3.495,3.486-3.486,9.154,0.018,12.649l25.271,25.271L92.556,168.15c-3.495,3.495-3.495,9.145,0,12.64l12.64,12.649
		c3.495,3.486,9.145,3.495,12.64,0l25.226-25.226l25.405,25.414c3.504,3.504,9.163,3.504,12.658,0.009l12.64-12.64
		c3.495-3.495,3.486-9.154-0.009-12.658L168.352,142.924z M143.027,0.004C64.031,0.004,0,64.036,0,143.022
		c0,78.996,64.031,143.027,143.027,143.027s143.027-64.031,143.027-143.027C286.054,64.045,222.022,0.004,143.027,0.004z
		 M143.027,259.232c-64.183,0-116.209-52.026-116.209-116.209s52.026-116.21,116.209-116.21s116.209,52.026,116.209,116.209
		S207.21,259.232,143.027,259.232z"/>
                                    </Grid>
                                </Viewbox>
                            </Button>
                            <Button Click="ButtonBase_OnClick" DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}">
                                <Viewbox Width="16" Height="16" Stretch="Uniform">
                                    <Grid>
                                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" Data="M0,143.027c0,78.987,64.031,143.027,143.027,143.027c79.005,0,143.027-64.04,143.027-143.027
		C286.054,64.031,222.031,0,143.027,0C64.04,0,0,64.04,0,143.027z M259.236,143.027c0,64.192-52.008,116.209-116.209,116.209
		S26.835,207.219,26.835,143.027S78.826,26.818,143.027,26.818C207.21,26.818,259.236,78.853,259.236,143.027z M134.088,91.358
		v24.86H89.392c-4.943,0-8.939,3.987-8.939,8.939v35.757c0,4.934,3.996,8.939,8.939,8.939h44.696v24.842
		c0,9.708,6.463,13.668,14.338,8.832l51.105-51.695c7.884-4.845,7.884-12.783,0-17.628l-51.105-51.677
		C140.551,77.681,134.088,81.642,134.088,91.358z"/>
                                    </Grid>
                                </Viewbox>
                            </Button>
                            <Button Click="ButtonBase_OnClick2" DockPanel.Dock="Right" Style="{StaticResource ButtonStyle}">
                                <Viewbox Width="16" Height="16" Stretch="Uniform">
                                    <Grid>
                                        <Path Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" Data="M143.027,0C64.022,0,0,64.04,0,143.027s64.022,143.027,143.027,143.027
		c78.996,0,143.027-64.04,143.027-143.027S222.014,0,143.027,0z M143.027,26.818c64.192,0,116.192,52.026,116.192,116.209
		c0,64.192-51.999,116.209-116.192,116.209S26.818,207.219,26.818,143.027C26.818,78.853,78.844,26.818,143.027,26.818z
		 M137.628,82.535l-51.096,51.677c-7.884,4.845-7.884,12.783,0,17.628l51.096,51.695c7.875,4.836,14.338,0.876,14.338-8.832v-24.851
		h44.696c4.943,0,8.939-4.005,8.939-8.939v-35.757c0-4.943-3.996-8.939-8.939-8.939h-44.696v-24.86
		C151.966,81.642,145.503,77.681,137.628,82.535z"/>
                                    </Grid>
                                </Viewbox>
                            </Button>
                            <TextBox 
                                Background="Transparent"
                                BorderThickness="0"
                              x:Name="filterComboBox"
                              Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}"
                                DockPanel.Dock="Left"
                                Margin="0,2"
                              >
                                <TextBox.ToolTip>
                                    <TextBlock Style="{x:Null}"
                                       Text="Enter text in the combo box to filter the tree view by name or type" />
                                </TextBox.ToolTip>
                            </TextBox>
                        </DockPanel>
                    </Border>
                </DockPanel>
                <!-- Visual Tree TreeView -->
                <treeList:TreeList x:Name="Tree"
                                   Grid.Row="1"
                                   MinHeight="0"
                                   MinWidth="0"
                                   Focusable="True"
                                   KeyboardNavigation.DirectionalNavigation="Cycle"
                                   Margin="2,0,2,0">
                    <treeList:TreeList.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </treeList:TreeList.ItemsPanel>
                    <treeList:TreeList.Template>
                        <ControlTemplate TargetType="{x:Type treeList:TreeList}">
                            <Border Background="White">
                                <Grid>
                                    <treeList:TreeListScrollViewer Focusable="False" x:Name="PART_ScrollViewer" HorizontalScrollBarVisibility="Visible"
                                                  VerticalScrollBarVisibility="Visible">
                                        <ItemsPresenter />
                                    </treeList:TreeListScrollViewer>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </treeList:TreeList.Template>
                    <treeList:TreeList.ItemContainerStyle>
                        <Style TargetType="{x:Type treeList:TreeListItem}">
                            <Setter Property="TextElement.Foreground" Value="{Binding Foreground}" />
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type treeList:TreeListItem}">
                                        <Grid>
                                            <Border x:Name="PART_Background" Background="DodgerBlue"
                                                    Visibility="Collapsed" />
                                            <DockPanel LastChildFill="True">
                                                <Border DockPanel.Dock="Left" x:Name="PART_Offset"
                                                        Width="{TemplateBinding Offset}" />
                                                <ToggleButton x:Name="PART_Expander"
                                                              IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                                              Style='{StaticResource TreeViewToggleStyle}'
                                                              DockPanel.Dock="Left" />
                                                <Border x:Name="PART_ContentHost" Background="Transparent"
                                                        DockPanel.Dock="Left">
                                                    <controls:HighlightBox x:Name="PART_ContentPresenter" HorizontalAlignment="Left" Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Highlight="{Binding RelativeSource={RelativeSource Self}, Path=(local:SnoopUI.SearchEngineInherited).CurrentFilter}"/>
                                                </Border>
                                            </DockPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="PART_Background" Property="Visibility"
                                                        Value="Visible" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                <Setter Property="Visibility" TargetName="PART_Expander" Value="Hidden" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </treeList:TreeList.ItemContainerStyle>
                </treeList:TreeList>
            </Grid>

            <!-- Tab Control (for the property grid, the data context property grid, and the events view) -->
            <!-- Vertical GridSplitter (between the visual tree tree view and the tab control (with the property grid/events view)) -->
            <GridSplitter
                x:Name="GridSplitter"
                Grid.Column="1"
                Width="4"
                MinHeight="0"
                HorizontalAlignment="Left"
                Margin="-2,0,0,0" />

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <TabControl
                    Margin="2,2,2,0">
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="Properties">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="Properties View" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="Lists all the properties on currently selected object. You can even edit these properties or right-click and then delve into them."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>
                        <local:PropertyInspector x:Name="PropertyGrid" RootTarget="{Binding CurrentSelection.Target}" />
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="Data Context">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="Data Context View" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="Lists all the properties for the Data Context of the currently selected object. You can even edit these properties or right-click and then delve into them."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>
                        <local:PropertyInspector x:Name="DataContextPropertyGrid"
                                                 RootTarget="{Binding CurrentSelection.Target.DataContext}" />
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="Events">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="Events View" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="Lists all the all routed events in the application, so you can see how they route, and where and/or whether they are handled."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>
                        <local:EventsView />
                    </TabItem>

                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="Methods">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="Methods View" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="A rudimentary view that lets you call methods on the selected visual or the data context of the selected visual."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>

                        <MethodsTabNS:MethodsControl
                            RootTarget="{Binding CurrentSelection.Target}"
                            IsSelected="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" />
                    </TabItem>

                    <TabItem
                        x:Name="PowerShellTab"
                        Visibility="{Binding Converter={StaticResource isPowerShellInstalled}}">
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="PowerShell">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="PowerShell View" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="A view which lets you script the Snooped app using PowerShell."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>
                    </TabItem>
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Style="{x:Null}" Text="Debug Listener">
                                <TextBlock.ToolTip>
                                    <StackPanel MaxWidth="300">
                                        <TextBlock Style="{x:Null}" Text="Debug Listener" />
                                        <TextBlock
                                            Style="{x:Null}"
                                            Text="Shows and filters debug output from the application being Snooped."
                                            TextWrapping="Wrap" />
                                    </StackPanel>
                                </TextBlock.ToolTip>
                            </TextBlock>
                        </TabItem.Header>

                    </TabItem>
                </TabControl>

                <!-- Horizontal GridSplitter (between the tab control (with the property grid/events view) and the previewer) -->
                <GridSplitter
                    Grid.Row="1"
                    Height="4"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    Margin="2,0,2,0" />

                <!-- Previewer -->
                <local:Previewer
                    x:Name="PreviewArea"
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="2,4,2,0"
                    Target="{Binding CurrentSelection.Target}" />
            </Grid>
        </Grid>
        <!-- StatusBar -->
        <StatusBar Grid.Row="1">
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Text="This is the object that has keyboard focus." />
                            <TextBlock Text="Click the link to select this object." />
                        </StackPanel>
                    </StackPanel.ToolTip>
                    <TextBlock Text="Keyboard.FocusedElement:" />
                    <TextBlock Margin="3,0,0,0"><local:NoFocusHyperlink
                            Focusable="False"
                            Command="{x:Static local:SnoopUI.SelectFocusCommand}"
                            CommandParameter="{Binding CurrentFocus}"><InlineUIContainer>
                                <TextBlock Text="{Binding CurrentFocus, Converter={StaticResource niceNamer}}" />
                            </InlineUIContainer></local:NoFocusHyperlink></TextBlock>
                    <TextBlock Text="; " />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel.ToolTip>
                        <StackPanel>
                            <TextBlock Text="This is the object that is the root of the current focus scope." />
                            <TextBlock Text="Click the link to select this object." />
                        </StackPanel>
                    </StackPanel.ToolTip>
                    <TextBlock Text="Current FocusScope:" />
                    <TextBlock Margin="3,0,0,0"><local:NoFocusHyperlink
                            Focusable="False"
                            Command="{x:Static local:SnoopUI.SelectFocusScopeCommand}"
                            CommandParameter="{Binding CurrentFocusScope}"><InlineUIContainer>
                                <TextBlock Text="{Binding CurrentFocusScope, Converter={StaticResource niceNamer}}" />
                            </InlineUIContainer></local:NoFocusHyperlink></TextBlock>
                </StackPanel>
            </StackPanel>
        </StatusBar>
    </Grid>
</Window>